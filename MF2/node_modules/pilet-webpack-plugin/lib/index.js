"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PiletWebpackPlugin = void 0;
var webpack_1 = require("webpack");
var helpers_1 = require("./helpers");
var pluginName = 'PiletWebpackPlugin';
function getExternals(piral) {
    var _a, _b;
    var shellPkg = require(piral + "/package.json");
    var piralExternals = (_b = (_a = shellPkg.pilets) === null || _a === void 0 ? void 0 : _a.externals) !== null && _b !== void 0 ? _b : [];
    return __spreadArrays(piralExternals, [
        '@dbeining/react-atom',
        '@libre/atom',
        'history',
        'react',
        'react-dom',
        'react-router',
        'react-router-dom',
        'tslib',
        'path-to-regexp',
    ]);
}
var PiletWebpackPlugin = /** @class */ (function () {
    function PiletWebpackPlugin(options) {
        this.options = options;
    }
    PiletWebpackPlugin.prototype.apply = function (compiler) {
        var environment = process.env.NODE_ENV || 'development';
        var _a = this.options, name = _a.name, version = _a.version, piral = _a.piral, _b = _a.externals, externals = _b === void 0 ? getExternals(piral) : _b, schema = _a.schema;
        var shortName = name.replace(/\W/gi, '');
        var jsonpFunction = "pr_" + shortName;
        var variables = __assign(__assign({}, helpers_1.getVariables(name, version, environment)), this.options.variables);
        var plugins = [
            new webpack_1.DefinePlugin(helpers_1.getDefineVariables(variables)),
        ];
        if (schema !== 'none') {
            var bannerSuffix = schema === 'v1' ? "1(" + jsonpFunction + ")" : "0";
            plugins.push(new webpack_1.BannerPlugin({
                banner: "//@pilet v:" + bannerSuffix,
                entryOnly: true,
                include: /\.js$/,
                raw: true,
            }));
        }
        helpers_1.setEnvironment(variables);
        plugins.forEach(function (plugin) { return plugin.apply(compiler); });
        compiler.hooks.afterEnvironment.tap(pluginName, function () {
            var current = compiler.options.externals;
            compiler.options.output.jsonpFunction = jsonpFunction + "_chunks";
            compiler.options.output.library = name;
            if (schema !== 'none') {
                compiler.options.output.libraryTarget = 'umd';
            }
            if (schema === 'v1') {
                var reset = environment !== 'production' ? "delete " + jsonpFunction + "_chunks;" : '';
                compiler.options.output.auxiliaryComment = {
                    commonjs2: "\nfunction define(d,k){" + reset + "(typeof document!=='undefined')&&(document.currentScript.app=k.apply(null,d.map(window." + jsonpFunction + ")));}define.amd=!0;",
                };
            }
            compiler.options.externals = Array.isArray(current)
                ? __spreadArrays(current, externals) : current
                ? __spreadArrays([current], externals) : externals;
        });
    };
    return PiletWebpackPlugin;
}());
exports.PiletWebpackPlugin = PiletWebpackPlugin;
//# sourceMappingURL=index.js.map