import { LogLevels, PiletSchemaVersion } from '../types';
export interface BuildPiletOptions {
    /**
     * Sets the name of the Piral instance.
     */
    app?: string;
    /**
     * The source index file (e.g. index.tsx) for collecting all the information
     * @example './src/index'
     */
    entry?: string;
    /**
     * The target file of bundling.
     * @example './dist/index.js'
     */
    target?: string;
    /**
     * States if minifaction or other post-bundle transformations should be performed.
     */
    minify?: boolean;
    /**
     * Indicates if a declaration file should be generated.
     */
    declaration?: boolean;
    /**
     * Sets the log level to use (1-5).
     */
    logLevel?: LogLevels;
    /**
     * States if the target directory should be removed before building.
     */
    fresh?: boolean;
    /**
     * States if source maps should be created for the bundles.
     */
    sourceMaps?: boolean;
    /**
     * Sets the bundler to use for building, if any specific.
     */
    bundlerName?: string;
    /**
     * States if a content hash should be appended to the side-bundle files
     */
    contentHash?: boolean;
    /**
     * States if the node modules should be included for target transpilation
     */
    optimizeModules?: boolean;
    /**
     * The schema to be used when bundling the pilets.
     * @example 'v1'
     */
    schemaVersion?: PiletSchemaVersion;
    /**
     * Additional arguments for a specific bundler.
     */
    _?: Record<string, any>;
}
export declare const buildPiletDefaults: BuildPiletOptions;
export declare function buildPilet(baseDir?: string, options?: BuildPiletOptions): Promise<void>;
