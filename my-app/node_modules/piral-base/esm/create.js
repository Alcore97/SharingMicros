import { isfunc } from './utils';
import { standardStrategy } from './strategies';
export function startLoadingPilets(options) {
    var state = {
        loaded: false,
        pilets: [],
        error: undefined,
    };
    var notifiers = [];
    var call = function (notifier) { return notifier(state.error, state.pilets, state.loaded); };
    var notify = function () { return notifiers.forEach(call); };
    var setPilets = function (error, pilets) {
        state.error = error;
        state.pilets = pilets;
        notify();
    };
    var setLoaded = function () {
        state.loaded = true;
        notify();
    };
    var _a = options.strategy, strategy = _a === void 0 ? standardStrategy : _a;
    strategy(options, setPilets).then(setLoaded, setLoaded);
    return {
        connect: function (notifier) {
            if (isfunc(notifier)) {
                notifiers.push(notifier);
                call(notifier);
            }
        },
        disconnect: function (notifier) {
            var index = notifiers.indexOf(notifier);
            index !== -1 && notifiers.splice(index, 1);
        },
    };
}
//# sourceMappingURL=create.js.map