import { isfunc } from './utils';
import { setupPilet } from './setup';
function checkCreateApi(createApi) {
    if (!isfunc(createApi)) {
        console.warn('Invalid `createApi` function. Skipping pilet installation.');
        return false;
    }
    return true;
}
/**
 * Sets up the evaluated pilets to become integrated pilets.
 * @param createApi The function to create an API object for a pilet.
 * @param pilets The available evaluated app pilets.
 * @returns The integrated pilets.
 */
export function createPilets(createApi, pilets) {
    var promises = [];
    if (checkCreateApi(createApi)) {
        for (var _i = 0, pilets_1 = pilets; _i < pilets_1.length; _i++) {
            var pilet = pilets_1[_i];
            promises.push(setupPilet(pilet, createApi));
        }
    }
    return Promise.all(promises).then(function () { return pilets; });
}
/**
 * Sets up an evaluated pilet to become an integrated pilet.
 * @param createApi The function to create an API object for the pilet.
 * @param pilet The available evaluated pilet.
 * @returns The integrated pilet.
 */
export function createPilet(createApi, pilet) {
    var promises = [];
    if (checkCreateApi(createApi)) {
        promises.push(setupPilet(pilet, createApi));
    }
    return Promise.all(promises).then(function () { return pilet; });
}
//# sourceMappingURL=aggregate.js.map