import { isfunc } from 'piral-base';
var noop = function () { };
export function createFeedOptions(id, resolver) {
    if (isfunc(resolver)) {
        return {
            id: id,
            initialize: function () {
                return resolver();
            },
            connect: function () {
                return noop;
            },
            update: function (data) {
                return Promise.resolve(data);
            },
            immediately: false,
            reducers: {},
        };
    }
    else {
        return {
            id: id,
            initialize: function () {
                return resolver.initialize();
            },
            connect: function (cb) {
                if (typeof resolver.connect === 'function') {
                    return resolver.connect(cb);
                }
                else {
                    return noop;
                }
            },
            update: function (data, item) {
                if (typeof resolver.update === 'function') {
                    return resolver.update(data, item);
                }
                else {
                    return Promise.resolve(data);
                }
            },
            immediately: resolver.immediately,
            reducers: resolver.reducers || {},
        };
    }
}
//# sourceMappingURL=utils.js.map