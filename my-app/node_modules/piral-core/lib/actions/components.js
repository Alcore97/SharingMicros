"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.unregisterExtension = exports.registerExtension = exports.unregisterPage = exports.registerPage = void 0;
var tslib_1 = require("tslib");
var utils_1 = require("../utils");
function registerPage(ctx, name, value) {
    ctx.dispatch(function (state) { return (tslib_1.__assign(tslib_1.__assign({}, state), { registry: tslib_1.__assign(tslib_1.__assign({}, state.registry), { pages: utils_1.withKey(state.registry.pages, name, value) }) })); });
}
exports.registerPage = registerPage;
function unregisterPage(ctx, name) {
    ctx.dispatch(function (state) { return (tslib_1.__assign(tslib_1.__assign({}, state), { registry: tslib_1.__assign(tslib_1.__assign({}, state.registry), { pages: utils_1.withoutKey(state.registry.pages, name) }) })); });
}
exports.unregisterPage = unregisterPage;
function registerExtension(ctx, name, value) {
    ctx.dispatch(function (state) { return (tslib_1.__assign(tslib_1.__assign({}, state), { registry: tslib_1.__assign(tslib_1.__assign({}, state.registry), { extensions: utils_1.withKey(state.registry.extensions, name, utils_1.appendItem(state.registry.extensions[name], value)) }) })); });
}
exports.registerExtension = registerExtension;
function unregisterExtension(ctx, name, reference) {
    ctx.dispatch(function (state) { return (tslib_1.__assign(tslib_1.__assign({}, state), { registry: tslib_1.__assign(tslib_1.__assign({}, state.registry), { extensions: utils_1.withKey(state.registry.extensions, name, utils_1.excludeOn(state.registry.extensions[name], function (m) { return m.reference === reference; })) }) })); });
}
exports.unregisterExtension = unregisterExtension;
//# sourceMappingURL=components.js.map