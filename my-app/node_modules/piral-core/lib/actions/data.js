"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.tryWriteDataItem = exports.writeDataItem = exports.readDataValue = exports.readDataItem = exports.resetData = void 0;
var tslib_1 = require("tslib");
var utils_1 = require("../utils");
function resetData(ctx) {
    ctx.dispatch(function (state) { return (tslib_1.__assign(tslib_1.__assign({}, state), { data: {} })); });
}
exports.resetData = resetData;
function readDataItem(ctx, key) {
    return ctx.readState(function (state) { return state.data[key]; });
}
exports.readDataItem = readDataItem;
function readDataValue(ctx, key) {
    var item = readDataItem(ctx, key);
    return item && item.value;
}
exports.readDataValue = readDataValue;
function writeDataItem(ctx, key, value, owner, target, expires) {
    var isNull = !value && typeof value === 'object';
    var data = isNull
        ? value
        : {
            value: value,
            owner: owner,
            target: target,
            expires: expires,
        };
    ctx.dispatch(function (state) { return (tslib_1.__assign(tslib_1.__assign({}, state), { data: utils_1.updateKey(state.data, key, data) })); });
    ctx.emit('store-data', {
        name: key,
        target: target,
        value: value,
        owner: owner,
        expires: expires,
    });
}
exports.writeDataItem = writeDataItem;
function tryWriteDataItem(ctx, key, value, owner, target, expires) {
    var item = readDataItem(ctx, key);
    if (item && item.owner !== owner) {
        console.error("Invalid data write to '" + key + "'. This item currently belongs to '" + item.owner + "' (write attempted from '" + owner + "'). The action has been ignored.");
        return false;
    }
    writeDataItem(ctx, key, value, owner, target, expires);
    return true;
}
exports.tryWriteDataItem = tryWriteDataItem;
//# sourceMappingURL=data.js.map