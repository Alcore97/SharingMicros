"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.defaultApiFactory = exports.createExtenders = exports.createCoreApi = void 0;
var tslib_1 = require("tslib");
var piral_base_1 = require("piral-base");
var state_1 = require("../state");
var components_1 = require("../components");
var utils_1 = require("../utils");
function createCoreApi(context) {
    return function (api, target) {
        var pilet = target.name;
        return {
            getData: function (name) {
                return context.readDataValue(name);
            },
            setData: function (name, value, options) {
                var _a = utils_1.createDataOptions(options), _b = _a.target, target = _b === void 0 ? 'memory' : _b, expires = _a.expires;
                var expiration = utils_1.getDataExpiration(expires);
                return context.tryWriteDataItem(name, value, pilet, target, expiration);
            },
            registerPage: function (route, arg, meta) {
                context.registerPage(route, {
                    pilet: pilet,
                    meta: meta,
                    component: state_1.withApi(context, arg, api, 'page'),
                });
                return function () { return api.unregisterPage(route); };
            },
            unregisterPage: function (route) {
                context.unregisterPage(route);
            },
            registerExtension: function (name, arg, defaults) {
                context.registerExtension(name, {
                    pilet: pilet,
                    component: state_1.withApi(context, arg, api, 'extension'),
                    reference: arg,
                    defaults: defaults,
                });
                return function () { return api.unregisterExtension(name, arg); };
            },
            unregisterExtension: function (name, arg) {
                context.unregisterExtension(name, arg);
            },
            renderHtmlExtension: function (element, props) {
                var id = utils_1.renderInDom(context, element, components_1.ExtensionSlot, props);
                return function () { return context.destroyPortal(id); };
            },
            Extension: components_1.ExtensionSlot,
        };
    };
}
exports.createCoreApi = createCoreApi;
function createExtenders(context, apis) {
    var creators = tslib_1.__spreadArray([createCoreApi], apis.filter(piral_base_1.isfunc));
    return creators.map(function (c) {
        var ctx = c(context);
        if (piral_base_1.isfunc(ctx)) {
            return ctx;
        }
        else {
            return function () { return (tslib_1.__assign({}, ctx)); };
        }
    });
}
exports.createExtenders = createExtenders;
function defaultApiFactory(context, apis) {
    var extenders = createExtenders(context, apis);
    return function (target) {
        var api = piral_base_1.initializeApi(target, context);
        context.apis[target.name] = api;
        return piral_base_1.mergeApis(api, extenders, target);
    };
}
exports.defaultApiFactory = defaultApiFactory;
//# sourceMappingURL=api.js.map