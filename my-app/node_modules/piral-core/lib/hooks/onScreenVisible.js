"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useOnScreenVisible = void 0;
var react_1 = require("react");
/**
 * Hook that detects if a reference element within the main document is
 * visible.
 * Useful for performing some animation or triggering certain actions (e.g.,
 * loading data for infinity scrolling) when an element appears or is close
 * to appear on screen.
 * @param ref The reference element to be visible.
 * @param rootMargin The tolerance level to the reference element.
 */
function useOnScreenVisible(ref, rootMargin) {
    if (rootMargin === void 0) { rootMargin = '0px'; }
    var _a = react_1.useState(false), isIntersecting = _a[0], setIntersecting = _a[1];
    react_1.useEffect(function () {
        var observer = new IntersectionObserver(function (_a) {
            var entry = _a[0];
            return setIntersecting(entry.isIntersecting);
        }, {
            rootMargin: rootMargin,
        });
        if (ref.current) {
            observer.observe(ref.current);
        }
        return function () { return observer.unobserve(ref.current); };
    }, []);
    return isIntersecting;
}
exports.useOnScreenVisible = useOnScreenVisible;
//# sourceMappingURL=onScreenVisible.js.map