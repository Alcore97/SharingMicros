import { __extends } from "tslib";
import * as React from 'react';
import { isfunc } from 'piral-base';
/**
 * The React component for catching errors and displaying error information.
 */
var ErrorBoundary = /** @class */ (function (_super) {
    __extends(ErrorBoundary, _super);
    function ErrorBoundary(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            error: undefined,
        };
        return _this;
    }
    ErrorBoundary.prototype.componentDidCatch = function (error) {
        var onError = this.props.onError;
        if (isfunc(onError)) {
            onError(error);
        }
        this.setState({
            error: error,
        });
    };
    ErrorBoundary.prototype.render = function () {
        var _a = this.props, children = _a.children, renderError = _a.renderError, renderChild = _a.renderChild, renderProps = _a.renderProps;
        var error = this.state.error;
        if (error) {
            if (isfunc(renderError)) {
                return renderError(error, renderProps);
            }
            return React.createElement("div", { style: { whiteSpace: 'pre-wrap' } }, error && error.message);
        }
        return isfunc(renderChild) ? renderChild(children, renderProps) : children;
    };
    return ErrorBoundary;
}(React.Component));
export { ErrorBoundary };
//# sourceMappingURL=ErrorBoundary.js.map