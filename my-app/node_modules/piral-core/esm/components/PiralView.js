import { __assign } from "tslib";
import * as React from 'react';
import { StaticRouter } from 'react-router';
import { PiralError, PiralRouter, PiralLoadingIndicator, PiralLayout, PiralDebug } from './components';
import { PiralRoutes } from './PiralRoutes';
import { useGlobalState } from '../hooks';
var NotFound = function (props) { return React.createElement(PiralError, __assign({ type: "not_found" }, props)); };
var PiralContent = function () {
    var _a = useGlobalState(function (m) { return m.app; }), error = _a.error, loading = _a.loading, layout = _a.layout;
    return error ? (React.createElement(PiralError, { type: "loading", error: error })) : loading ? (React.createElement(PiralLoadingIndicator, null)) : (React.createElement(PiralLayout, { currentLayout: layout },
        React.createElement(PiralRoutes, { NotFound: NotFound })));
};
var Router = typeof window === 'undefined' ? function (props) { return React.createElement(StaticRouter, __assign({ location: "/" }, props)); } : PiralRouter;
var PiralProvider = function (_a) {
    var children = _a.children;
    var provider = useGlobalState(function (m) { return m.provider; }) || React.Fragment;
    return React.createElement(provider, undefined, children);
};
/**
 * The component responsible for the generic view of the application.
 * This includes the global providers, the used Router, the current content and some convenience.
 */
export var PiralView = function (_a) {
    var children = _a.children;
    return (React.createElement(PiralProvider, null,
        React.createElement(Router, null,
            React.createElement(PiralContent, null),
            children,
            React.createElement(PiralDebug, null))));
};
PiralView.displayName = 'PiralView';
//# sourceMappingURL=PiralView.js.map