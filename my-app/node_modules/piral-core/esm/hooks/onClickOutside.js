import { useEffect } from 'react';
/**
 * Hook that detects if a click outside the given reference
 * has been performed.
 * @param ref The reference to the element.
 * @param handler The callback to invoke when an outside click happened.
 */
export function useOnClickOutside(ref, handler) {
    useEffect(function () {
        var listener = function (event) {
            if (ref.current && !ref.current.contains(event.target)) {
                handler(event);
            }
        };
        document.addEventListener('mousedown', listener);
        document.addEventListener('touchstart', listener);
        return function () {
            document.removeEventListener('mousedown', listener);
            document.removeEventListener('touchstart', listener);
        };
    }, [handler]);
}
//# sourceMappingURL=onClickOutside.js.map