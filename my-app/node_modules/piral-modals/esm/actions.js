import { __assign } from "tslib";
import { withKey, withoutKey, prependItem, excludeOn } from 'piral-core';
export function openModal(ctx, dialog) {
    ctx.dispatch(function (state) { return (__assign(__assign({}, state), { modals: prependItem(state.modals, dialog) })); });
}
export function closeModal(ctx, dialog) {
    ctx.dispatch(function (state) { return (__assign(__assign({}, state), { modals: excludeOn(state.modals, function (modal) { return modal.id === dialog.id; }) })); });
}
export function registerModal(ctx, name, value) {
    ctx.dispatch(function (state) { return (__assign(__assign({}, state), { registry: __assign(__assign({}, state.registry), { modals: withKey(state.registry.modals, name, value) }) })); });
}
export function unregisterModal(ctx, name) {
    ctx.dispatch(function (state) { return (__assign(__assign({}, state), { registry: __assign(__assign({}, state.registry), { modals: withoutKey(state.registry.modals, name) }) })); });
}
//# sourceMappingURL=actions.js.map