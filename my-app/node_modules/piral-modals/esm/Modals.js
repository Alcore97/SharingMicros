import { __assign } from "tslib";
import * as React from 'react';
import { useGlobalState } from 'piral-core';
import { PiralModalsDialog, PiralModalsHost } from './components';
function closeAll(modals) {
    modals.forEach(function (m) { return m.close(); });
}
function findModal(modals, name) {
    if (name) {
        var modal = Object.keys(modals)
            .filter(function (m) { return modals[m].name === name; })
            .map(function (m) { return modals[m]; })[0];
        return modal;
    }
    return undefined;
}
export var Modals = function () {
    var modals = useGlobalState(function (s) { return s.registry.modals; });
    var dialogs = useGlobalState(function (s) { return s.modals; });
    var close = function () { return closeAll(dialogs); };
    var children = dialogs
        .map(function (n) {
        var reg = modals[n.name] || findModal(modals, n.alternative);
        var Component = reg && reg.component;
        var defaults = reg && reg.defaults;
        return (Component && (React.createElement(PiralModalsDialog, __assign({}, n, { key: n.name }),
            React.createElement(Component, { onClose: n.close, options: __assign(__assign({}, defaults), n.options) }))));
    })
        .filter(function (m) { return !!m; });
    var open = children.length > 0;
    return (React.createElement(PiralModalsHost, { open: open, close: close }, children));
};
Modals.displayName = 'Modals';
//# sourceMappingURL=Modals.js.map